(
    source: Some("@/dev/shm/luac.nlMulvN8"),
    stack_info: (
        is_vararg: 1,
        num_stack: 21,
        num_param: 0,
    ),
    line_info: (
        line_defined: (0, 0),
        line_offset: [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            2,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            -3,
            4,
            1,
            -9,
            0,
            11,
            7,
            43,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            -128,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
        ],
        line_data: [
            (128, 81),
        ],
    ),
    value_list: [
        ("v_1", String("_")),
        ("vThisFileWasG_1", String("This file was generated by vSecure V1.0 | made by Deni210")),
        ("v11760C11970C_1", String("11760c11970c11025c11550c12180c")),
        ("v10920C10605C_1", String("10920c10605c12705c")),
        ("v12075C10605C_1", String("12075c10605c10395c11970c10605c12180c3360c12075c12180c11970c11025c11550c10815c")),
        ("v10710C11025C_1", String("10710c11025c11550c10500c3360c12180c10920c10605c3360c12075c10605c10395c11970c10605c12180c3360c12075c12180c11970c11025c11550c10815c3360c6090c12075c10920c12285c12075c10920c6090c")),
        ("vPairs_1", String("pairs")),
        ("v_2", String("")),
        ("vType_1", String("type")),
        ("vString_1", String("string")),
        ("vSub_1", String("sub")),
        ("vC_1", String("c")),
        ("vChar_1", String("char")),
        ("vTonumber_1", String("tonumber")),
        ("vInteger_1", Integer(105)),
    ],
    local_list: [
        (
            name: Some("a"),
            start_pc: 9,
            end_pc: 160,
        ),
        (
            name: Some("b"),
            start_pc: 11,
            end_pc: 160,
        ),
        (
            name: Some("c"),
            start_pc: 12,
            end_pc: 160,
        ),
        (
            name: Some("d"),
            start_pc: 13,
            end_pc: 160,
        ),
        (
            name: Some("(for state)"),
            start_pc: 16,
            end_pc: 59,
        ),
        (
            name: Some("(for state)"),
            start_pc: 16,
            end_pc: 59,
        ),
        (
            name: Some("(for state)"),
            start_pc: 16,
            end_pc: 59,
        ),
        (
            name: Some("(for state)"),
            start_pc: 16,
            end_pc: 59,
        ),
        (
            name: Some("e"),
            start_pc: 17,
            end_pc: 57,
        ),
        (
            name: Some("f"),
            start_pc: 17,
            end_pc: 57,
        ),
        (
            name: Some("g"),
            start_pc: 18,
            end_pc: 57,
        ),
        (
            name: Some("h"),
            start_pc: 19,
            end_pc: 57,
        ),
        (
            name: Some("(for state)"),
            start_pc: 27,
            end_pc: 55,
        ),
        (
            name: Some("(for state)"),
            start_pc: 27,
            end_pc: 55,
        ),
        (
            name: Some("(for state)"),
            start_pc: 27,
            end_pc: 55,
        ),
        (
            name: Some("i"),
            start_pc: 28,
            end_pc: 54,
        ),
        (
            name: Some("j"),
            start_pc: 61,
            end_pc: 160,
        ),
    ],
    upval_list: [
        ("uEnv_1", (
            name: Some("_ENV"),
            in_stack: true,
            index: 0,
        )),
    ],
    block_list: [
        (
            label: 0,
            body: [
                VarargPrep(R(0)),
                SetTabUp("uEnv_1", "v_1", K("vThisFileWasG_1")),
                NewTable(R(0), 0, 4, false),
                ExtraInteger(0),
                LoadK(R(1), "v11760C11970C_1"),
                LoadK(R(2), "v10920C10605C_1"),
                LoadK(R(3), "v12075C10605C_1"),
                LoadK(R(4), "v10710C11025C_1"),
                SetList(R(0), 4, 0, false),
                NewTable(R(1), 0, 0, false),
                ExtraInteger(0),
                LoadI(R(2), 1),
                GetUpval(R(3), "uEnv_1"),
                GetTabUp(R(4), "uEnv_1", "vPairs_1"),
                Move(R(5), R(0)),
                Call(R(4), Exactly(1), Exactly(4)),
            ],
            edge: Loop(IteratorPrep(R(4)), Label(1), Label(10)),
        ),
        (
            label: 1,
            body: [
                LoadK(R(10), "v_2"),
                LoadK(R(11), "v_2"),
                GetTabUp(R(12), "uEnv_1", "vType_1"),
                Move(R(13), R(9)),
                Call(R(12), Exactly(1), Exactly(1)),
            ],
            edge: Condition(EqK(R(12), "vString_1"), Label(3), Label(2)),
        ),
        (
            label: 2,
            body: [],
            edge: Unconditional(Label(10)),
        ),
        (
            label: 3,
            body: [
                LoadI(R(12), 1),
                Len(R(13), R(9)),
                LoadI(R(14), 1),
            ],
            edge: Loop(NumericPrep(R(12)), Label(4), Label(9)),
        ),
        (
            label: 4,
            body: [
                Method(R(16), R(9), K("vSub_1")),
                Move(R(18), R(15)),
                Move(R(19), R(15)),
                Call(R(16), Exactly(3), Exactly(1)),
            ],
            edge: Condition(EqK(R(16), "vC_1"), Label(6), Label(5)),
        ),
        (
            label: 5,
            body: [],
            edge: Unconditional(Label(7)),
        ),
        (
            label: 6,
            body: [
                Move(R(16), R(11)),
                GetTabUp(R(17), "uEnv_1", "vString_1"),
                GetField(R(17), R(17), "vChar_1"),
                GetTabUp(R(18), "uEnv_1", "vTonumber_1"),
                Move(R(19), R(10)),
                Call(R(18), Exactly(1), Exactly(1)),
                DivK(R(18), R(18), "vInteger_1"),
                MmBinK(R(18), "vInteger_1", Div, false),
                Call(R(17), Exactly(1), Exactly(1)),
                Concat(R(16), R(2), 0),
                Move(R(11), R(16)),
                LoadK(R(10), "v_2"),
            ],
            edge: Unconditional(Label(8)),
        ),
        (
            label: 7,
            body: [
                Move(R(16), R(10)),
                Method(R(17), R(9), K("vSub_1")),
                Move(R(19), R(15)),
                Move(R(20), R(15)),
                Call(R(17), Exactly(3), Exactly(1)),
                Concat(R(16), R(2), 0),
                Move(R(10), R(16)),
            ],
            edge: Unconditional(Label(8)),
        ),
        (
            label: 8,
            body: [],
            edge: Loop(Numeric(R(12)), Label(9), Label(4)),
        ),
        (
            label: 9,
            body: [
                SetTable(R(0), R(8), R(11)),
                LoadK(R(11), "v_2"),
            ],
            edge: Unconditional(Label(10)),
        ),
        (
            label: 10,
            body: [
                TForCall(R(4), 2),
            ],
            edge: Loop(Iterator(R(4)), Label(11), Label(1)),
        ),
        (
            label: 11,
            body: [
                Close(R(4)),
                Closure(R(4), "fFunction_1"),
            ],
            edge: Unconditional(Label(12)),
        ),
        (
            label: 12,
            body: [],
            edge: Condition(EqI(R(2), 1), Label(14), Label(13)),
        ),
        (
            label: 13,
            body: [],
            edge: Unconditional(Label(15)),
        ),
        (
            label: 14,
            body: [
                GetI(R(5), R(0), 1),
                GetTable(R(5), R(3), R(5)),
                SetI(R(1), 0, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 15,
            body: [],
            edge: Condition(EqI(R(2), 4), Label(17), Label(16)),
        ),
        (
            label: 16,
            body: [],
            edge: Unconditional(Label(18)),
        ),
        (
            label: 17,
            body: [
                LoadI(R(5), -2),
                GetTable(R(1), R(1), R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 18,
            body: [],
            edge: Condition(EqI(R(2), 13), Label(20), Label(19)),
        ),
        (
            label: 19,
            body: [],
            edge: Unconditional(Label(21)),
        ),
        (
            label: 20,
            body: [
                GetI(R(5), R(1), 1),
                GetI(R(6), R(1), 2),
                Call(R(5), Exactly(1), Exactly(0)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 21,
            body: [],
            edge: Condition(EqI(R(2), 11), Label(23), Label(22)),
        ),
        (
            label: 22,
            body: [],
            edge: Unconditional(Label(24)),
        ),
        (
            label: 23,
            body: [
                GetI(R(1), R(1), 2),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 24,
            body: [],
            edge: Condition(EqI(R(2), 17), Label(26), Label(25)),
        ),
        (
            label: 25,
            body: [],
            edge: Unconditional(Label(28)),
        ),
        (
            label: 26,
            body: [],
            edge: Return(R(5), Exactly(0), 1, true),
        ),
        (
            label: 27,
            body: [],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 28,
            body: [],
            edge: Condition(EqI(R(2), 10), Label(30), Label(29)),
        ),
        (
            label: 29,
            body: [],
            edge: Unconditional(Label(31)),
        ),
        (
            label: 30,
            body: [
                GetI(R(5), R(0), 8),
                GetTable(R(5), R(3), R(5)),
                SetI(R(1), 6, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 31,
            body: [],
            edge: Condition(EqI(R(2), 15), Label(33), Label(32)),
        ),
        (
            label: 32,
            body: [],
            edge: Unconditional(Label(34)),
        ),
        (
            label: 33,
            body: [
                GetI(R(5), R(1), 2),
                SetI(R(1), 2, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 34,
            body: [],
            edge: Condition(EqI(R(2), 3), Label(36), Label(35)),
        ),
        (
            label: 35,
            body: [],
            edge: Unconditional(Label(37)),
        ),
        (
            label: 36,
            body: [
                GetI(R(5), R(0), 2),
                SetI(R(1), 1, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 37,
            body: [],
            edge: Condition(EqI(R(2), 2), Label(39), Label(38)),
        ),
        (
            label: 38,
            body: [],
            edge: Unconditional(Label(40)),
        ),
        (
            label: 39,
            body: [
                LoadI(R(5), -2),
                Move(R(6), R(4)),
                Move(R(7), R(1)),
                Call(R(6), Exactly(1), Exactly(1)),
                SetTable(R(1), R(5), R(6)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 40,
            body: [],
            edge: Condition(EqI(R(2), 8), Label(42), Label(41)),
        ),
        (
            label: 41,
            body: [],
            edge: Unconditional(Label(43)),
        ),
        (
            label: 42,
            body: [
                GetI(R(5), R(0), 1),
                GetTable(R(5), R(3), R(5)),
                SetI(R(1), 1, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 43,
            body: [],
            edge: Condition(EqI(R(2), 9), Label(45), Label(44)),
        ),
        (
            label: 44,
            body: [],
            edge: Unconditional(Label(46)),
        ),
        (
            label: 45,
            body: [
                Move(R(5), R(4)),
                Move(R(6), R(1)),
                Call(R(5), Exactly(1), Exactly(1)),
                SetI(R(1), 2, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 46,
            body: [],
            edge: Condition(EqI(R(2), 6), Label(48), Label(47)),
        ),
        (
            label: 47,
            body: [],
            edge: Unconditional(Label(49)),
        ),
        (
            label: 48,
            body: [
                GetI(R(5), R(1), 0),
                GetI(R(6), R(1), 1),
                Call(R(5), Exactly(1), Exactly(0)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 49,
            body: [],
            edge: Condition(EqI(R(2), 14), Label(51), Label(50)),
        ),
        (
            label: 50,
            body: [],
            edge: Unconditional(Label(52)),
        ),
        (
            label: 51,
            body: [
                LoadI(R(5), -1),
                Move(R(6), R(4)),
                Move(R(7), R(1)),
                Call(R(6), Exactly(1), Exactly(1)),
                SetTable(R(1), R(5), R(6)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 52,
            body: [],
            edge: Condition(EqI(R(2), 7), Label(54), Label(53)),
        ),
        (
            label: 53,
            body: [],
            edge: Unconditional(Label(55)),
        ),
        (
            label: 54,
            body: [
                GetI(R(5), R(0), 3),
                SetI(R(1), 0, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 55,
            body: [],
            edge: Condition(EqI(R(2), 12), Label(57), Label(56)),
        ),
        (
            label: 56,
            body: [],
            edge: Unconditional(Label(58)),
        ),
        (
            label: 57,
            body: [
                GetI(R(5), R(0), 4),
                SetI(R(1), 2, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 58,
            body: [],
            edge: Condition(EqI(R(2), 16), Label(60), Label(59)),
        ),
        (
            label: 59,
            body: [],
            edge: Unconditional(Label(61)),
        ),
        (
            label: 60,
            body: [
                LoadI(R(5), -1),
                GetTable(R(1), R(1), R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 61,
            body: [],
            edge: Condition(EqI(R(2), 5), Label(63), Label(62)),
        ),
        (
            label: 62,
            body: [],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 63,
            body: [
                GetI(R(5), R(0), 2),
                SetI(R(1), 1, R(5)),
            ],
            edge: Unconditional(Label(64)),
        ),
        (
            label: 64,
            body: [
                AddI(R(2), R(2), 1),
                MmBinI(R(2), 1, Add, false),
            ],
            edge: Unconditional(Label(12)),
        ),
        (
            label: 65,
            body: [],
            edge: Return(R(5), Exactly(0), 1, true),
        ),
    ],
    child_list: [
        ("fFunction_1", (
            source: None,
            stack_info: (
                is_vararg: 0,
                num_stack: 9,
                num_param: 1,
            ),
            line_info: (
                line_defined: (23, 27),
                line_offset: [
                    1,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                ],
                line_data: [],
            ),
            value_list: [
                ("vPairs_1", String("pairs")),
            ],
            local_list: [
                (
                    name: Some("k"),
                    start_pc: 0,
                    end_pc: 12,
                ),
                (
                    name: Some("l"),
                    start_pc: 2,
                    end_pc: 12,
                ),
                (
                    name: Some("(for state)"),
                    start_pc: 5,
                    end_pc: 9,
                ),
                (
                    name: Some("(for state)"),
                    start_pc: 5,
                    end_pc: 9,
                ),
                (
                    name: Some("(for state)"),
                    start_pc: 5,
                    end_pc: 9,
                ),
                (
                    name: Some("(for state)"),
                    start_pc: 5,
                    end_pc: 9,
                ),
                (
                    name: Some("m"),
                    start_pc: 6,
                    end_pc: 7,
                ),
                (
                    name: Some("n"),
                    start_pc: 6,
                    end_pc: 7,
                ),
            ],
            upval_list: [
                ("uEnv_1", (
                    name: Some("_ENV"),
                    in_stack: false,
                    index: 0,
                )),
            ],
            block_list: [
                (
                    label: 0,
                    body: [
                        NewTable(R(1), 0, 0, false),
                        ExtraInteger(0),
                        GetTabUp(R(2), "uEnv_1", "vPairs_1"),
                        Move(R(3), R(0)),
                        Call(R(2), Exactly(1), Exactly(4)),
                    ],
                    edge: Loop(IteratorPrep(R(2)), Label(1), Label(2)),
                ),
                (
                    label: 1,
                    body: [
                        SetTable(R(1), R(6), R(7)),
                    ],
                    edge: Unconditional(Label(2)),
                ),
                (
                    label: 2,
                    body: [
                        TForCall(R(2), 2),
                    ],
                    edge: Loop(Iterator(R(2)), Label(3), Label(1)),
                ),
                (
                    label: 3,
                    body: [
                        Close(R(2)),
                    ],
                    edge: Return(R(1), Exactly(1), 0, true),
                ),
                (
                    label: 4,
                    body: [],
                    edge: Return(R(2), Exactly(0), 0, true),
                ),
            ],
            child_list: [],
        )),
    ],
)